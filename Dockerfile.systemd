
#####################################
#
# Build container
#
#####################################

FROM gcc:12-bookworm AS aqualinkd-build

#ARG AQUALINKD_VERSION=2.3.3
ARG AQUALINKD_VERSION

RUN test -n "$AQUALINKD_VERSION" || (echo "AQUALINKD_VERSION not set" && false)


#FROM gcc:4.9
#COPY . /usr/src/aqualinkd
#WORKDIR /usr/src/aqualinkd/AqualinkD
#RUN gcc -o myapp aqualinkd.c

#VOLUME ["/aqualinkd-build"]
WORKDIR /usr/bin

RUN apt-get update && \
    apt-get -y install libsystemd-dev
#COPY . .

# Use local version
#COPY ./AqualinkD-source /home/aqualinkd

# Get a specific version
RUN mkdir /home/AqualinkD
WORKDIR /home/AqualinkD
#RUN curl --silent -L "https://github.com/sfeakes/AqualinkD/archive/refs/tags/v"$AQUALINKD_VERSION".tar.gz" | tar xz --strip-components=1

RUN curl --silent -L "https://github.com/sfeakes/AqualinkD/archive/refs/heads/Simulator-dev.tar.gz" | tar xz --strip-components=1

# Or get letest dev using below.
#WORKDIR /home
#RUN git clone https://github.com/sfeakes/AqualinkD.git


WORKDIR /home/AqualinkD
RUN make container
#RUN make install

RUN ls -al /home/AqualinkD/release/aqualinkd
RUN pwd

#####################################
#
# Runtime container
#
#####################################

FROM debian:bookworm-slim AS aqualinkd

#VOLUME ["/aqualinkd"]
ARG AQUALINKD_VERSION

RUN apt-get update \
  && apt-get install -y cron

# Systemd to get jorunal running
#RUN apt-get -y install systemd

# optional stuff for debugging, remove from release
#RUN apt-get -y install procps vim

RUN apt-get clean

#RUN apt-get -y install systemd systemd-sysv
#RUN apt-get -y install systemd
#ENV container docker
#STOPSIGNAL SIGRTMIN+3
#VOLUME [ "/tmp", "/run", "/run/lock" ]
#WORKDIR /
# Remove unnecessary units
#RUN apt-get update && apt-get install -y systemd bash && apt-get clean && mkdir -p /lib/systemd && ln -s /lib/systemd/system /usr/lib/systemd/system;
#RUN rm -f /lib/systemd/system/multi-user.target.wants/* \
#  /etc/systemd/system/*.wants/* \
#  /lib/systemd/system/local-fs.target.wants/* \
#  /lib/systemd/system/sockets.target.wants/*udev* \
#  /lib/systemd/system/sockets.target.wants/*initctl* \
#  /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup* \
#  /lib/systemd/system/systemd-update-utmp*

# Uncomment journal conf file to write to stdout
#RUN sed -i '/ForwardToSyslog/s/^#//g' /etc/systemd/journald.conf

# optional stuff
#RUN apt-get -y install procps vim
#RUN apt-get clean

# Add Open Container Initiative (OCI) annotations.
# See: https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL org.opencontainers.image.title="AqualinkD"
LABEL org.opencontainers.image.url="https://hub.docker.com/repository/docker/sfeakes/aqualinkd/general"
LABEL org.opencontainers.image.source="https://github.com/sfeakes/AqualinkD"
#LABEL org.opencontainers.image.source="https://github.com/sfeakes/AqualinkD-Docker"
LABEL org.opencontainers.image.documentation="https://github.com/sfeakes/AqualinkD"
LABEL org.opencontainers.image.version=$AQUALINKD_VERSION


COPY --from=aqualinkd-build /home/AqualinkD/release/aqualinkd /usr/local/bin/aqualinkd                        
COPY --from=aqualinkd-build /home/AqualinkD/release/serial_logger /usr/local/bin/serial_logger
COPY --from=aqualinkd-build /home/AqualinkD/web/ /var/www/aqualinkd/


#WORKDIR ./release
#CMD ["sh", "-c", "/usr/local/bin/aqualinkd -d -c ${config}"]

# Add Tini
#ENV TINI_VERSION v0.19.0
#ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
#RUN chmod +x /tini
#ENTRYPOINT ["/tini", "--"]

#CMD ["/usr/local/bin/aqualinkd -c ${config}"]

#RUN /lib/systemd/systemd-journald &
CMD ["sh", "-c", "/usr/local/bin/aqualinkd -d -ns -c ${config}"]

#CMD ["sh", "-c", "/lib/systemd/systemd-journald & /usr/local/bin/aqualinkd -d -c ${config}"]

#CMD [ "/lib/systemd/systemd", "log-level=info", "unit=sysinit.target" ]
#CMD [ "/sbin/init" ]
